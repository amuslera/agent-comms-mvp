[
  {
    "type": "error",
    "id": "5a824519-e15c-4b84-a0dd-ac4742d0d006",
    "timestamp": "2025-05-18T00:49:10.756949",
    "sender": "CA",
    "recipient": "ARCH",
    "version": "1.0.0",
    "content": {
      "error_code": "INVALID_MESSAGE",
      "message": "Message validation failed: 'version' is a required property\n\nFailed validating 'required' in schema:\n    {'$schema': 'http://json-schema.org/draft-07/schema#',\n     'title': 'Agent Communication Protocol Schema',\n     'description': 'Schema for inter-agent messages in the '\n                    'agent-comms-mvp system',\n     'type': 'object',\n     'required': ['type',\n                  'id',\n                  'timestamp',\n                  'sender',\n                  'recipient',\n                  'content',\n                  'version'],\n     'properties': {'type': {'type': 'string',\n                             'enum': ['task_assignment',\n                                      'task_status',\n                                      'error'],\n                             'description': 'Type of message being sent'},\n                    'id': {'type': 'string',\n                           'format': 'uuid',\n                           'description': 'Unique message identifier (UUID '\n                                          'v4)'},\n                    'timestamp': {'type': 'string',\n                                  'format': 'date-time',\n                                  'description': 'ISO 8601 timestamp of '\n                                                 'message creation'},\n                    'sender': {'type': 'string',\n                               'enum': ['CC', 'CA', 'WA', 'ARCH'],\n                               'description': 'Identifier of the sending '\n                                              'agent'},\n                    'recipient': {'type': 'string',\n                                  'enum': ['CC', 'CA', 'WA', 'ARCH'],\n                                  'description': 'Identifier of the '\n                                                 'receiving agent'},\n                    'content': {'type': 'object',\n                                'description': 'Message content, varies by '\n                                               'type',\n                                'oneOf': [{'if': {'properties': {'type': {'const': 'task_assignment'}}},\n                                           'then': {'properties': {'task_id': {'type': 'string',\n                                                                               'pattern': '^TASK-\\\\d{3}$',\n                                                                               'description': 'Unique '\n                                                                                              'task '\n                                                                                              'identifier'},\n                                                                   'description': {'type': 'string',\n                                                                                   'description': 'Task '\n                                                                                                  'description'},\n                                                                   'priority': {'type': 'integer',\n                                                                                'minimum': 1,\n                                                                                'maximum': 5,\n                                                                                'description': 'Task '\n                                                                                               'priority '\n                                                                                               '(1-5)'},\n                                                                   'deadline': {'type': 'string',\n                                                                                'format': 'date-time',\n                                                                                'description': 'Task '\n                                                                                               'deadline'},\n                                                                   'requirements': {'type': 'array',\n                                                                                    'items': {'type': 'string'},\n                                                                                    'description': 'List '\n                                                                                                   'of '\n                                                                                                   'task '\n                                                                                                   'requirements'}},\n                                                    'required': ['task_id',\n                                                                 'description',\n                                                                 'priority',\n                                                                 'deadline',\n                                                                 'requirements']}},\n                                          {'if': {'properties': {'type': {'const': 'task_status'}}},\n                                           'then': {'properties': {'task_id': {'type': 'string',\n                                                                               'pattern': '^TASK-\\\\d{3}$',\n                                                                               'description': 'Task '\n                                                                                              'identifier'},\n                                                                   'status': {'type': 'string',\n                                                                              'enum': ['pending',\n                                                                                       'in_progress',\n                                                                                       'completed',\n                                                                                       'failed',\n                                                                                       'cancelled'],\n                                                                              'description': 'Current '\n                                                                                             'task '\n                                                                                             'status'},\n                                                                   'progress': {'type': 'integer',\n                                                                                'minimum': 0,\n                                                                                'maximum': 100,\n                                                                                'description': 'Task '\n                                                                                               'completion '\n                                                                                               'percentage'},\n                                                                   'details': {'type': 'string',\n                                                                               'description': 'Additional '\n                                                                                              'status '\n                                                                                              'details'}},\n                                                    'required': ['task_id',\n                                                                 'status',\n                                                                 'progress',\n                                                                 'details']}},\n                                          {'if': {'properties': {'type': {'const': 'error'}}},\n                                           'then': {'properties': {'error_code': {'type': 'string',\n                                                                                  'enum': ['INVALID_MESSAGE',\n                                                                                           'FILE_NOT_FOUND',\n                                                                                           'PROCESSING_ERROR',\n                                                                                           'INVALID_TASK'],\n                                                                                  'description': 'Error '\n                                                                                                 'code '\n                                                                                                 'identifier'},\n                                                                   'message': {'type': 'string',\n                                                                               'description': 'Human-readable '\n                                                                                              'error '\n                                                                                              'message'},\n                                                                   'context': {'type': 'object',\n                                                                               'description': 'Additional '\n                                                                                              'error '\n                                                                                              'context',\n                                                                               'properties': {'task_id': {'type': 'string',\n                                                                                                          'pattern': '^TASK-\\\\d{3}$'},\n                                                                                              'attempted_path': {'type': 'string'}}}},\n                                                    'required': ['error_code',\n                                                                 'message',\n                                                                 'context']}}]},\n                    'version': {'type': 'string',\n                                'pattern': '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$',\n                                'description': 'Protocol version (e.g., '\n                                               '1.0.0)'},\n                    'metadata': {'type': 'object',\n                                 'description': 'Optional metadata for the '\n                                                'message',\n                                 'properties': {'protocol_version': {'type': 'string',\n                                                                     'pattern': '^\\\\d+\\\\.\\\\d+\\\\.\\\\d+$'}}}}}\n\nOn instance:\n    {'type': 'task_assignment',\n     'id': 'task-001',\n     'timestamp': '2025-05-18T10:00:00Z',\n     'sender': 'ARCH',\n     'recipient': 'CA',\n     'content': {'task_id': 'demo-summary-test',\n                 'description': 'Simulate summary extraction',\n                 'priority': 1,\n                 'deadline': '2025-05-20T00:00:00Z',\n                 'requirements': ['text'],\n                 'handler': 'summary'},\n     'metadata': {'protocol_version': '1.0.0'}}",
      "context": {
        "original_message_id": "task-001"
      }
    },
    "metadata": {
      "protocol_version": "1.0.0"
    }
  },
  {
    "type": "task_status",
    "id": "d0ff5cfe-1dbb-4f0d-b534-9bbee00bf866",
    "timestamp": "2025-05-18T00:51:03.675793",
    "sender": "CA",
    "recipient": "ARCH",
    "version": "1.0.0",
    "content": {
      "task_id": "TASK-901",
      "status": "completed",
      "progress": 100,
      "details": "Task TASK-901 completed successfully (simulated execution)"
    },
    "metadata": {
      "protocol_version": "1.0.0",
      "original_message_id": "task-001"
    }
  },
  {
    "type": "task_status",
    "id": "18a3a7d4-1b5f-4c89-a234-567890123456",
    "timestamp": "2025-05-18T07:15:00Z",
    "sender": "CC",
    "recipient": "ARCH",
    "version": "1.0.0",
    "content": {
      "task_id": "TASK-003",
      "status": "completed",
      "progress": 100,
      "details": "PR successfully reviewed and merged into main branch. exchange_protocol.json and all example files are now in place."
    },
    "metadata": {
      "protocol_version": "1.0.0",
      "pr_url": "https://github.com/amuslera/agent-comms-mvp/pull/2"
    }
  },
  {
    "type": "task_status",
    "id": "c3d42f89-6a21-4832-b789-123456789012",
    "timestamp": "2025-05-18T08:45:00Z",
    "sender": "CC",
    "recipient": "ARCH",
    "version": "1.0.0",
    "content": {
      "task_id": "TASK-007",
      "status": "completed",
      "progress": 100,
      "details": "Implemented agent_runner.py CLI tool with message validation, task execution simulation, logging, and status reporting. Branch pushed and ready for review."
    },
    "metadata": {
      "protocol_version": "1.0.0",
      "branch": "feat/TASK-007-agent-runner"
    }
  },
  {
    "type": "task_status",
    "id": "a1b2c3d4-5e6f-7890-abcd-ef1234567890",
    "timestamp": "2025-05-18T10:00:00Z",
    "sender": "CC",
    "recipient": "ARCH",
    "version": "1.0.0",
    "content": {
      "task_id": "TASK-010",
      "status": "completed",
      "progress": 100,
      "details": "Implemented agent self-initialization system with --init flag. Agents can now display their profiles, prompt templates, and expected behavior. Branch feat/TASK-010-agent-init pushed and ready for review."
    },
    "metadata": {
      "protocol_version": "1.0.0",
      "branch": "feat/TASK-010-agent-init"
    }
  },
  {
    "type": "task_status",
    "id": "e85cbbfa-8efc-4c03-84ec-3add8bb897d5",
    "timestamp": "2025-05-18T11:36:00Z",
    "sender": "CC",
    "recipient": "ARCH",
    "version": "1.0.0",
    "content": {
      "task_id": "TASK-042",
      "status": "completed",
      "progress": 100,
      "details": "Successfully completed TASK-042: Created git tag v1.4.0-resilient-orchestration and updated all documentation. This marks the successful completion of Phase 4 Sprint 1, delivering enhanced orchestration with retry/fallback logic and improved execution management."
    },
    "metadata": {
      "protocol_version": "1.0.0",
      "retries": 2,
      "tag_name": "v1.4.0-resilient-orchestration",
      "phase": "Phase 4 Sprint 1",
      "features_added": [
        "Retry logic with exponential backoff",
        "Fallback task routing",
        "Execution state persistence",
        "Execution summary tool",
        "Enhanced error handling",
        "Task allocation improvements"
      ],
      "documentation_updated": [
        "CHANGELOG.md",
        "docs/RELEASE_NOTES.md",
        "TASK_CARDS.md"
      ],
      "git_status": "Tag created and pushed to origin"
    }
  }
]