# ARCH Execution Plan Format
# Version: 1.0.0
# Description: This file defines tasks to be executed by the ARCH orchestrator
# Format follows YAML 1.2 specification

# Metadata section - contains plan-level information
metadata:
  plan_id: "plan_001"  # Unique identifier for this plan
  version: "1.0.0"      # Plan format version
  created: "2025-05-18T10:00:00Z"  # ISO 8601 timestamp
  description: "Sample execution plan for ARCH orchestrator"
  priority: "medium"    # Overall plan priority (low, medium, high, critical)
  timeout: "1h"         # Maximum time for plan execution

# Tasks section - list of tasks to be executed
tasks:
  # Task 1: Process data files
  - task_id: "task_001"  # Unique task identifier
    agent: "CA"         # Target agent (CA = Task Implementation Agent)
    type: "task_assignment"  # Message type from protocol
    description: "Process and analyze the latest data files"
    priority: "high"    # Task priority (low, medium, high, critical)
    deadline: "2025-05-18T18:00:00Z"  # ISO 8601 timestamp
    
    # Task-specific content - varies by task type
    content:
      action: "process_data"
      parameters:
        input_dir: "/data/raw"
        output_dir: "/data/processed"
        file_pattern: "*.csv"
      requirements:
        - "python>=3.8"
        - "pandas>=1.3.0"
      
    # Dependencies - list of task_ids that must complete before this task starts
    dependencies: []  # This task has no dependencies
    
    # Retry configuration
    max_retries: 3  # Max attempts (renamed from max_attempts for consistency)
    # No fallback agent specified for this task
      
    # Timeout for this specific task
    timeout: "30m"

  # Task 2: Generate report (depends on Task 1)
  - task_id: "task_002"
    agent: "WA"  # Web Assistant for reporting
    type: "task_assignment"
    description: "Generate summary report from processed data"
    priority: "medium"
    deadline: "2025-05-18T19:00:00Z"
    
    content:
      action: "generate_report"
      parameters:
        input_file: "/data/processed/results.json"
        report_format: "html"
        output_file: "/reports/summary.html"
    
    # This task depends on task_001 completing successfully
    dependencies: ["task_001"]
    
    # Retry with fallback to CC if WA fails
    max_retries: 2
    fallback_agent: "CC"  # Backend can also generate reports if needed
    
    # Notifications - who to notify when this task completes
    notifications:
      on_success: ["user@example.com"]
      on_failure: ["admin@example.com"]

  # Task 3: System health check (can run in parallel with other tasks)
  - task_id: "task_003"
    agent: "CC"  # Backend Infrastructure Agent
    type: "task_assignment"
    description: "Perform system health check"
    priority: "low"
    deadline: "2025-05-18T20:00:00Z"
    
    content:
      action: "health_check"
      parameters:
        check_services: ["database", "api", "storage"]
        timeout: "5m"
    
    # No dependencies, can run in parallel with other tasks
    dependencies: []
    
    # Minimal retry configuration for health check
    max_retries: 2
    # No fallback needed for infrastructure checks

# How ARCH processes this plan:
# 1. Validates the YAML structure and required fields
# 2. Topologically sorts tasks based on dependencies
# 3. For each task in order:
#    a. Validates task structure against schema
#    b. Creates task_assignment message
#    c. Routes to target agent's inbox
#    d. Monitors for task_status updates
#    e. Handles retries and timeouts
# 4. Tracks overall plan status and notifies on completion/failure
