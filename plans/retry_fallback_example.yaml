# ARCH Execution Plan with Retry and Fallback Demo
# Version: 1.0.0
# Description: Demonstrates retry logic and fallback agent support
# Format follows YAML 1.2 specification

# Metadata section - contains plan-level information
metadata:
  plan_id: "plan_retry_demo"
  version: "1.0.0"      
  created: "2025-05-18T20:00:00Z"  
  description: "Example plan demonstrating retry and fallback features"
  priority: "medium"    
  timeout: "1h"         

# Tasks section - list of tasks to be executed
tasks:
  # Task 1: Simple task with retry
  - task_id: "task_001"  
    agent: "CA"         
    type: "task_assignment"  
    description: "Process data files with retry support"
    priority: "high"    
    deadline: "2025-05-18T23:00:00Z"  
    
    # Task-specific content
    content:
      action: "process_data"
      parameters:
        input_dir: "/data/raw"
        output_dir: "/data/processed"
        file_pattern: "*.csv"
      requirements:
        - "python>=3.8"
    
    # Retry configuration
    max_retries: 3  # Will attempt up to 3 times on failure
    
    # No fallback agent specified, will retry on same agent
    
  # Task 2: Task with fallback agent
  - task_id: "task_002"
    agent: "WA"  # Primary agent
    type: "task_assignment"
    description: "Generate report with fallback to CC"
    priority: "medium"
    deadline: "2025-05-18T23:30:00Z"
    
    content:
      action: "generate_report"
      parameters:
        input_file: "/data/processed/results.json"
        report_format: "html"
        output_file: "/reports/summary.html"
    
    # Retry and fallback configuration
    max_retries: 2  # Will attempt twice
    fallback_agent: "CC"  # If WA fails, try CC
    
  # Task 3: Critical task with maximum retry and fallback
  - task_id: "task_003"
    agent: "CC"  
    type: "task_assignment"
    description: "Critical system health check"
    priority: "critical"
    deadline: "2025-05-19T00:00:00Z"
    
    content:
      action: "health_check"
      parameters:
        check_services: ["database", "api", "storage"]
        timeout: "5m"
        alert_on_failure: true
    
    # Aggressive retry and fallback strategy
    max_retries: 5  # Try up to 5 times
    fallback_agent: "CA"  # If CC fails all attempts, try CA
    
  # Task 4: Low priority task with minimal retry
  - task_id: "task_004"
    agent: "WA"
    type: "task_assignment"
    description: "Clean up temporary files"
    priority: "low"
    deadline: "2025-05-19T02:00:00Z"
    
    content:
      action: "cleanup"
      parameters:
        directories: ["/tmp", "/cache"]
        age_threshold: "7d"
    
    # Minimal retry, no fallback
    max_retries: 1  # Only try once (default)
    # No fallback_agent specified

# Expected behavior:
# - task_001: Will retry up to 3 times on CA if it fails
# - task_002: Will try twice on WA, then switch to CC for remaining attempts
# - task_003: Will try 5 times on CC, then fallback to CA if all attempts fail
# - task_004: Will only execute once on WA, no retries or fallback