{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Task Assignment Message",
  "description": "Schema for task assignment messages sent from ARCH to agents in Bluelabel Agent OS",
  "$comment": "Schema version: 1.0.0 - Initial version for task assignments",
  "type": "object",
  "required": [
    "type",
    "protocol_version",
    "sender_id",
    "recipient_id",
    "timestamp",
    "task_id",
    "payload"
  ],
  "properties": {
    "type": {
      "const": "task_assignment",
      "description": "Message type - always 'task_assignment' for task assignments"
    },
    "protocol_version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+$",
      "description": "Version of the message protocol (e.g., '1.3')"
    },
    "sender_id": {
      "const": "ARCH",
      "description": "Task assignments are always sent by ARCH"
    },
    "recipient_id": {
      "type": "string",
      "enum": ["CA", "CC", "WA"],
      "description": "The agent that will execute this task"
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp of message creation"
    },
    "task_id": {
      "type": "string",
      "pattern": "^[A-Z0-9_-]+$",
      "minLength": 1,
      "maxLength": 64,
      "description": "Unique identifier for this task"
    },
    "trace_id": {
      "type": "string",
      "description": "Distributed tracing identifier for tracking execution"
    },
    "retry_count": {
      "type": "integer",
      "minimum": 0,
      "default": 0,
      "description": "Number of times this task has been retried"
    },
    "payload": {
      "type": "object",
      "required": ["type", "content"],
      "properties": {
        "type": {
          "const": "task_assignment",
          "description": "Payload type matching the envelope type"
        },
        "content": {
          "type": "object",
          "required": ["task_id", "description", "action"],
          "properties": {
            "task_id": {
              "type": "string",
              "pattern": "^[A-Z0-9_-]+$",
              "description": "Task ID (should match envelope task_id)"
            },
            "description": {
              "type": "string",
              "minLength": 1,
              "maxLength": 500,
              "description": "Human-readable description of the task"
            },
            "action": {
              "type": "string",
              "minLength": 1,
              "description": "Specific action the agent should perform"
            },
            "parameters": {
              "type": "object",
              "description": "Action-specific parameters",
              "additionalProperties": true
            },
            "requirements": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of requirements for task execution"
            },
            "input_files": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of input files or paths"
            },
            "output_files": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "List of expected output files or paths"
            },
            "priority": {
              "type": "string",
              "enum": ["low", "medium", "high", "critical"],
              "default": "medium",
              "description": "Task execution priority"
            },
            "dependencies": {
              "type": "array",
              "items": {
                "type": "string",
                "pattern": "^[A-Z0-9_-]+$"
              },
              "uniqueItems": true,
              "description": "List of task IDs that must complete before this task"
            },
            "deadline": {
              "type": "string",
              "format": "date-time",
              "description": "ISO 8601 timestamp when task must be completed"
            },
            "timeout": {
              "type": "integer",
              "minimum": 1,
              "description": "Task timeout in seconds"
            },
            "conditions": {
              "type": "object",
              "properties": {
                "when": {
                  "type": "string",
                  "description": "Expression that must evaluate to true for task to run"
                },
                "unless": {
                  "type": "string",
                  "description": "Expression that must evaluate to false for task to run"
                }
              },
              "description": "Conditional execution rules"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata for the task assignment",
      "additionalProperties": true
    }
  },
  "additionalProperties": false
}